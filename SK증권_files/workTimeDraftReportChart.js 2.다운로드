const WorkTimeDraftReportChartWidget = {
    $el: $.scope("WORK_TIME_DRAFT_CHART_WIDGET"),

    config: {
        widgetId: "WORK_TIME_DRAFT_CHART"
    },

    instance: null,

    chartConfig : {
        data: {
            table: 'datatable'
        },
        chart: {
            type: 'column',
            height : 300,
            // height : (9 / 17 * 75) + '%',

        },
        title: {
            text: ''
        },
        legend:{
            enabled: false
        },
        xAxis: {
            categories: null
        },
        yAxis: {
            allowDecimals: false,
            title: {
                text: ''
            }
        },
        tooltip: {
            pointFormat: '{series.name}: <b>{point.y}</b>'
        },
        series: null
    },

    init: function () {
        WorkTimeDraftReportChartWidget.bind.fields();
        WorkTimeDraftReportChartWidget.reload('2');
    },

    reload: function (type) { /* type - 업무시간별 신청 현황 유형: 1.일, 2.주, 3.월 */
        const _this = this;

        _AJAX.get({
            url: `/api/approval/dashboard/work-time-draft-bar-chart/${type}`,
            success: function (response) {
                if (null == response || null == response["labels"]) return;

                _this.chartConfig.series = response["datasets"];
                _this.chartConfig.xAxis.categories = response["labels"];
                Highcharts.chart(_this.config.widgetId, _this.chartConfig);
            }
        });
        WidgetCommon.methods.changeConfig(_this, _this.$el.getFieldParameters());
    },

    bind: {
        fields: function () {
            let _this = WorkTimeDraftReportChartWidget;
            _this.$el.find("[data-period-type]").click(function () {
                const _$that = $(this);

                _this.methods.closeDropdown(_this);

                _$that.parent().parent().scope("label").text(_$that.text());

                _this.reload(_$that.data("period-type"));
            });
        }
    },

    methods: {
        randomize: () => {
            if (null != WorkTimeDraftReportChartWidget.instance) {
                WorkTimeDraftReportChartWidget.instance.config.data.datasets.forEach(function (dataset) {
                    dataset.data = dataset.data.map(function () {
                        return Math.round(Math.random() * (100));
                    });
                });

                WorkTimeDraftReportChartWidget.instance.update();
            }
        },

        closeDropdown: (_this) => {
            _this.$el.find(".dropdown-menu").removeClass("show").prev().attr("aria-expanded", "false");
        }
    }
};
chartWidgets["WORK_TIME_DRAFT_CHART_WIDGET"] = WorkTimeDraftReportChartWidget;

const WorkTimeDraftReportChartWidgetConfig = {
    $el: $.scope("WORK_TIME_DRAFT_CHART_WIDGET_CONF"),

    main: WorkTimeDraftReportChartWidget,

    init: function () {
        const _this = this;

        WidgetCommonConfig.bind.fields(_this);
        WidgetCommonConfig.bind.buttons(_this);

        /**
         * WidgetConfig 창이 열릴때, 모든 데이터를 초기화 한다.
         */
        _this.$el.on("show.bs.modal", function () {
            WidgetCommonConfig.reload(_this);
        });

        _this.$el.on("hidden.bs.modal", function () {
        });
    },

    close: function () {
        const _this = this;

        _this.$el.modal("hide");
    }
};
WorkTimeDraftReportChartWidgetConfig.init();