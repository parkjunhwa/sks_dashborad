/**
 * @file 날짜 Utils
 * @author jason, Moon
 * @see https://momentjs.com/
 * @requires moment
 * @module _DATES
 */
(function (window, jQuery, moment) {
"use strict";
var pluginName = "_DATES";

if (null == window["moment"]) return;
if (!window.hasOwnProperty(pluginName) || null == window[pluginName]) window[pluginName] = {
    /**
     * @constant FULL_FORMAT
     * @type {string}
     * @default "YYYY-MM-DD HH:mm:ss"
     */
    FULL_FORMAT              : "YYYY-MM-DD HH:mm:ss", // 24기간 포맷

    /**
     * @constant DEFAULT_FORMAT
     * @type {string}
     * @default "YYYY-MM-DD"
     */
    DEFAULT_FORMAT           : "YYYY-MM-DD",

    /**
     * @constant YEAR_FORMAT
     * @type {string}
     * @default "YYYY"
     */
    YEAR_FORMAT              : "YYYY",

    /**
     * @constant YEAR_MONTH_FORMAT
     * @type {string}
     * @default "YYYY-MM"
     */
    YEAR_MONTH_FORMAT        : "YYYY-MM",

    /**
     * @constant SECONDS
     * @type {string}
     * @default "seconds"
     */
    SECONDS: "seconds",

    /**
     * @constant MINUTES
     * @type {string}
     * @default "minutes"
     */
    MINUTES: "minutes",

    /**
     * @constant MINUTES
     * @type {string}
     * @default "hours"
     */
    HOURS: "hours",

    /**
     * @constant DAY
     * @type {string}
     * @default "days"
     */
    DAY  : "days",

    /**
     * @constant WEEK
     * @type {string}
     * @default "weeks"
     */
    WEEK : "weeks",

    /**
     * @constant MONTH
     * @type {string}
     * @default "months"
     */
    MONTH: "months",

    /**
     * @constant YEAR
     * @type {string}
     * @default "years"
     */
    YEAR : "years",

    /**
     * @function today
     * @description 오늘 날짜(또는 현재 일시) 가져오기
     * @example
     * console.log("date(like 2020-10-26): " + _DATES.today());
     * console.log("date(maybe 2020-10-26 16:26:35): " + _DATES.today(_DATES.FULL_FORMAT));
     * @param {string} [formatter=_DATES.DEFAULT_FORMAT] 날짜 포맷 문자열, ex.) _DATES.FULL_FORMAT, _DATES.DEFAULT_FORMAT, _DATES.YEAR_MONTH_FORMAT, _DATES.YEAR_FORMAT
     * @returns {string} 포맷이 적용된 날짜
     */
    today: function (formatter) {
        if (!formatter) formatter = this.DEFAULT_FORMAT;

        return moment(new Date()).format(formatter);
    },

    /**
     * @function add
     * @description 과거/미래 날짜 가져오기
     * @example
     * console.log("date(like 2020-10-26): " + _DATES.today());
     * console.log("date(maybe 2021-10-26): " + _DATES.add(null, 1, _DATES.YEAR));
     * @param {object} [date=_DATES.today()] 기준 날짜, ex) null, "2020-10-26", "2020-10-26 17:30:30", 1318781876(Unix Timestamp), (new Date()), [2020, 0, 1], moment()
     * @param {number} [duration=1] 연산 값 ex) -7, 7
     * @param {string} [unit=_DATES.DAY] 단위 문자열, ex.) _DATES.YEAR, _DATES.MONTH, _DATES.WEEK, _DATES.DAY, _DATES.HOURS, _DATES.MINUTES, _DATES.SECONDS
     * @param {string} [formatter=_DATES.DEFAULT_FORMAT] 날짜 포맷 문자열, ex.) _DATES.FULL_FORMAT, _DATES.DEFAULT_FORMAT, _DATES.YEAR_MONTH_FORMAT, _DATES.YEAR_FORMAT
     * @returns {string} 포맷이 적용된 날짜
     */
    add: function (date, duration, unit, formatter) {

        if (!date) date = this.today();
        else date = moment(date);
        if (!duration) duration = 1;
        if (!unit) unit = this.DAY;
        if (!formatter) formatter = this.DEFAULT_FORMAT;

        return moment(date).add(duration, unit).format(formatter);
    },

    /**
     * @function addDays
     * @description 며칠 전/후 날짜 가져오기
     * @example
     * console.log("date(like 2020-10-26): " + _DATES.today());
     * console.log("date(maybe 2020-10-27): " + _DATES.addDays(1));
     * console.log("date(maybe 2020-10-25): " + _DATES.addDays(-1));
     * console.log("date(maybe 2020-10-25): " + _DATES.addDays(-1, _DATES.today()));
     * @param {number} duration 연산 값 ex) -7, 7
     * @param {object} [target=_DATES.today()] 기준 날짜, ex) null, "2020-10-26", 1318781876(Unix Timestamp), (new Date()), [2020, 0, 1], moment()
     * @returns {string} 일자 포맷이 적용된 날짜
     */
    addDays: function (duration, target) {
        if (target === undefined) target = this.today();

        return moment(target).add(duration, this.DAY).format(this.DEFAULT_FORMAT);
    },

    /**
     * @function addWeeks
     * @description 몇 주 전/후 날짜 가져오기
     * @example
     * console.log("date(like 2020-10-26): " + _DATES.today());
     * console.log("date(maybe 2020-11-02): " + _DATES.addDays(7));
     * console.log("date(maybe 2020-11-02): " + _DATES.addWeeks(1));
     * console.log("date(maybe 2020-11-02): " + _DATES.addWeeks(1, _DATES.today()));
     * @param {number} duration 연산 값 ex) -1, 1
     * @param {object} [target=_DATES.today()] 기준 날짜, ex) null, "2020-10-26", 1318781876(Unix Timestamp), (new Date()), [2020, 0, 1], moment()
     * @returns {string} 일자 포맷이 적용된 날짜
     */
    addWeeks: function (duration, target) {
        if (target === undefined) target = this.today();

        return moment(target).add(duration, this.WEEK).format(this.DEFAULT_FORMAT);
    },

    /**
     * @function addMonths
     * @description 몇 개월 전/후 날짜 가져오기
     * console.log("date(like 2020-10-26): " + _DATES.today());
     * console.log("date(maybe 2020-11-26): " + _DATES.addMonths(1));
     * console.log("date(maybe 2020-11-26): " + _DATES.addMonths(1, _DATES.today()));
     * @param {number} duration 연산 값 ex) -1, 1
     * @param {object} [target=_DATES.today()] 기준 날짜, ex) null, "2020-10-26", 1318781876(Unix Timestamp), (new Date()), [2020, 0, 1], moment()
     * @returns {string} 일자 포맷이 적용된 날짜
     */
    addMonths: function (duration, target) {
        if (target === undefined) target = this.today();

        return moment(target).add(duration, this.MONTH).format(this.DEFAULT_FORMAT);
    },

    /**
     * @function addYears
     * @description 몇 년 전/후 날짜 가져오기
     * @example
     * console.log("date(like 2020-10-26): " + _DATES.today());
     * console.log("date(maybe 2021-10-26): " + _DATES.addYears(1));
     * console.log("date(maybe 2021-10-26): " + _DATES.addYears(1, _DATES.today()));
     * @param {number} duration 연산 값 ex) -1, 1
     * @param {object} [target=_DATES.today()] 기준 날짜, ex) null, "2020-10-26", 1318781876(Unix Timestamp), (new Date()), [2020, 0, 1], moment()
     * @returns {string} 일자 포맷이 적용된 날짜
     */
    addYears: function (duration, target) {
        if (target === undefined) target = this.today();

        return moment(target).add(duration, this.YEAR).format(this.DEFAULT_FORMAT);
    },

    /**
     * @function firstDay
     * @description 이번 달 1일 날짜 가져오기
     * @example
     * console.log("date(like 2020-10-26): " + _DATES.today());
     * console.log("date(maybe 2020-10-01): " + _DATES.firstDay());
     * @returns {string} 일자 포맷이 적용된 날짜
     */
    firstDay: function () {
        return moment().startOf('month').format(this.DEFAULT_FORMAT);
    },

    /**
     * @function lastDay
     * @description 이번 달 말일 날짜 가져오기
     * @example
     * console.log("date(like 2020-10-26): " + _DATES.today());
     * console.log("date(maybe 2020-10-31): " + _DATES.lastDay());
     * @returns {string} 일자 포맷이 적용된 날짜
     */
    lastDay: function () {
        return moment().endOf('month').format(this.DEFAULT_FORMAT);
    },

    /**
     * @function lastMonthFirstDay
     * @description 지난 달 1일 날짜 가져오기
     * @example
     * console.log("date(like 2020-10-26): " + _DATES.today());
     * console.log("date(maybe 2020-09-01): " + _DATES.lastMonthFirstDay());
     * @returns {string} 일자 포맷이 적용된 날짜
     */
    lastMonthFirstDay: function () {
        return moment().add(-1, 'months').startOf('month').format(this.DEFAULT_FORMAT);
    },

    /**
     * @function lastMonthLastDay
     * @description 지난 달 말일 날짜 가져오기
     * @example
     * console.log("date(like 2020-10-26): " + _DATES.today());
     * console.log("date(maybe 2020-09-30): " + _DATES.lastMonthLastDay());
     * @returns {string} 일자 포맷이 적용된 날짜
     */
    lastMonthLastDay: function () {
        return moment().add(-1, 'months').endOf('month').format(this.DEFAULT_FORMAT);
    },

    /**
     * @function lastYearMonth
     * @description 1년 전 말일 날짜 가져오기
     * @example
     * console.log("date(like 2020-10-26): " + _DATES.today());
     * console.log("date(maybe 2019-10-31): " + _DATES.lastYearMonth());
     * @returns {string} 일자 포맷이 적용된 날짜
     */
    lastYearMonth: function () {
        return moment().add(-1, 'months').startOf('month').format(this.YEAR_MONTH_FORMAT);
    },

    /**
     * @function thisYear
     * @description 현재 년도 가져오기
     * @example
     * console.log("date(like 2020-10-26): " + _DATES.today());
     * console.log("date(maybe 2020): " + _DATES.thisYear());
     * @returns {string} 년도 포맷이 적용된 날짜
     */
    thisYear: function () {
        return moment().format(this.YEAR_FORMAT);
    },

    /**
     * @function thisYearMonth
     * @description 이번 달 년월 가져오기
     * @example
     * console.log("date(like 2020-10-26): " + _DATES.today());
     * console.log("date(maybe 2020-10): " + _DATES.thisYearMonth());
     * @returns {string} 년월 포맷이 적용된 날짜
     */
    thisYearMonth: function () {
        return moment().startOf('month').format(this.YEAR_MONTH_FORMAT);
    },

    /**
     * @function setSearchStartDate
     * @description 조회기간의 시작 값 가져오기
     * @example
     * console.log("date(like 2020-10-26): " + _DATES.today());
     * console.log("date(like 2020-10-26 00:00:00): " + _DATES.setSearchStartDate("2020-10-26"));
     * console.log("date(like 2020-10-26 23:59:59): " + _DATES.setSearchEndDate("2020-10-26"));
     * @param {object} date 기준 날짜, ex) "2020-10-26", [2020, 9, 26]
     * @returns {string} 일시 포맷이 적용된 날짜
     */
    setSearchStartDate: function (date) {
        return moment(date).format(this.FULL_FORMAT);
    },

    /**
     * @function setSearchEndDate
     * @description 조회기간의 종료 값 가져오기
     * @example
     * console.log("date(like 2020-10-26): " + _DATES.today());
     * console.log("date(like 2020-10-26 23:59:59): " + _DATES.setSearchEndDate("2020-10-26"));
     * console.log("date(like 2020-10-26 23:59:59): " + _DATES.setSearchEndDate("2020-10-26 17:30:30"));
     * @param {object} [date=_DATES.today()] 기준 날짜, ex) null, "2020-10-26", "2020-10-26 17:30:30", 1318781876(Unix Timestamp), (new Date()), [2020, 0, 1], moment()
     * @returns {string} 일시 포맷이 적용된 날짜
     */
    setSearchEndDate: function (date) {
        return moment(date).add(23, 'hours').add(59, 'minute').add(59, 'second').format(this.FULL_FORMAT);
    },

    /**
     * @function formatting
     * @description 포맷 적용
     * @example
     * console.log("date(like 2020-10-26): " + _DATES.today());
     * console.log("date(like 2020-10-26): " + _DATES.formatting(null, _DATES.DEFAULT_FORMAT));
     * console.log("date(like 2020-10-26 17:41:30): " + _DATES.formatting(null, _DATES.FULL_FORMAT));
     * @param {object} date 기준 날짜, ex) null, "2020-10-26", "2020-10-26 17:30:30", 1318781876(Unix Timestamp), (new Date()), [2020, 0, 1], moment()
     * @param {string} [format=_DATES.DEFAULT_FORMAT] 날짜 포맷 문자열, ex.) _DATES.FULL_FORMAT, _DATES.DEFAULT_FORMAT, _DATES.YEAR_MONTH_FORMAT, _DATES.YEAR_FORMAT
     * @returns {string} 포맷이 적용된 날짜
     */
    formatting: function (date, format) {
        if (!format) format = this.DEFAULT_FORMAT;

        return moment(date).format(format);
    },

    /**
     * @function isBetween
     * @description 기간내 포함 여부 가져오기
     * @example
     * if (_DATES.isBetween("2020-10-26", "2020-01-01", "2020-12-31")) console.log("This is displayed!");
     * if (_DATES.isBetween("2020-10-26 17:53:30", "2020-01-01 00:00:00", "2020-12-31 23:59:59")) console.log("This is displayed!");
     * @param {object} date 기준 날짜, ex) null, "2020-10-26", "2020-10-26 17:30:30", 1318781876(Unix Timestamp), (new Date()), [2020, 0, 1], moment()
     * @param {object} startDate 시작 날짜, ex) null, "2020-10-26", "2020-10-26 17:30:30", 1318781876(Unix Timestamp), (new Date()), [2020, 0, 1], moment()
     * @param {object} endDate 종료 날짜, ex) null, "2020-10-26", "2020-10-26 17:30:30", 1318781876(Unix Timestamp), (new Date()), [2020, 0, 1], moment()
     * @returns {boolean} 포함 여부
     */
    isBetween: function (target, startDate, endDate) {
        return moment(target).isBetween(startDate, endDate, null, '[]');
    },

    /**
     * @function isAfter
     * @description 미래 날짜 여부 가져오기
     * @example
     * if (_DATES.isAfter("2020-10-26", "2020-01-01")) console.log("This is displayed!");
     * if (_DATES.isAfter("2020-10-26 17:53:30", "2020-01-01 00:00:00")) console.log("This is displayed!");
     * @param {object} source 미래인지 확인할 날짜, ex) null, "2020-10-26", "2020-10-26 17:30:30", 1318781876(Unix Timestamp), (new Date()), [2020, 0, 1], moment()
     * @param {object} target 과거 날짜, ex) null, "2020-10-26", "2020-10-26 17:30:30", 1318781876(Unix Timestamp), (new Date()), [2020, 0, 1], moment()
     * @returns {boolean} 미래 여부
     */
    isAfter  : function (source, target) {
        return moment(source).isAfter(target);
    },

    /**
     * @function between
     * @description 기간이 몇 일(/분/시간/주/개월/년)인지 가져오기
     * @example
     * console.log("days(maybe 5): " + _DATES.between("2019-05-20", "2019-05-25"));
     * console.log("years(maybe 1): " + _DATES.between("2019-05-20", "2020-05-20", _DATES.YEAR));
     * @param {object} fromDate 시작 날짜, ex) null, "2020-10-26", "2020-10-26 17:30:30", 1318781876(Unix Timestamp), (new Date()), [2020, 0, 1], moment()
     * @param {object} toDate 종료 날짜, ex) null, "2020-10-26", "2020-10-26 17:30:30", 1318781876(Unix Timestamp), (new Date()), [2020, 0, 1], moment()
     * @param {string} [unit=_DATES.DAY] 단위 문자열, ex.) _DATES.YEAR, _DATES.MONTH, _DATES.WEEK, _DATES.DAY, _DATES.HOURS, _DATES.MINUTES, _DATES.SECONDS
     * @returns {number} 차이 값
     */
    between: function (fromDate, toDate, unit) {
        if (unit === undefined) {
            unit = this.DAY;
        }

        if (this.MINUTES === unit) {
            return moment.duration(moment(toDate).diff(moment(fromDate))).asMinutes();
        } else if (this.HOURS === unit) {
            return moment.duration(moment(toDate).diff(moment(fromDate))).asHours();
        } else if (this.DAY === unit) {
            return moment.duration(moment(toDate).diff(moment(fromDate))).asDays();
        } else if (this.WEEK === unit) {
            return moment.duration(moment(toDate).diff(moment(fromDate))).asWeeks();
        } else if (this.MONTH === unit) {
            return moment.duration(moment(toDate).diff(moment(fromDate))).asMonths();
        } else if (this.YEAR === unit) {
            return moment.duration(moment(toDate).diff(moment(fromDate))).asYears();
        }
    },

    /**
     * @function parseDate
     * @description 날짜 변환
     * @example
     * console.log("_DATES.parseDate(\"today\") = "      + _DATES.parseDate("today"));      // _DATES.parseDate("today")      = 2020-07-10
     * console.log("_DATES.parseDate(\"yesterday\") = "  + _DATES.parseDate("yesterday"));  // _DATES.parseDate("yesterday")  = 2020-07-09
     * console.log("_DATES.parseDate(\"tomorrow\") = "   + _DATES.parseDate("tomorrow"));   // _DATES.parseDate("tomorrow")   = 2020-07-11
     * console.log("_DATES.parseDate(\"+0d\") = "        + _DATES.parseDate("+0d"));        // _DATES.parseDate("+0d")        = 2020-07-10
     * console.log("_DATES.parseDate(\"+0D\") = "        + _DATES.parseDate("+0D"));        // _DATES.parseDate("+0D")        = 2020-07-10
     * console.log("_DATES.parseDate(\"+2D\") = "        + _DATES.parseDate("+2D"));        // _DATES.parseDate("+2D")        = 2020-07-12
     * console.log("_DATES.parseDate(\"-2D\") = "        + _DATES.parseDate("-2D"));        // _DATES.parseDate("-2D")        = 2020-07-08
     * console.log("_DATES.parseDate(\"+1w\") = "        + _DATES.parseDate("+1w"));        // _DATES.parseDate("+1w")        = 2020-07-17
     * console.log("_DATES.parseDate(\"-1w\") = "        + _DATES.parseDate("-1w"));        // _DATES.parseDate("-1w")        = 2020-07-03
     * console.log("_DATES.parseDate(\"+1m\") = "        + _DATES.parseDate("+1m"));        // _DATES.parseDate("+1m")        = 2020-08-10
     * console.log("_DATES.parseDate(\"-1m\") = "        + _DATES.parseDate("-1m"));        // _DATES.parseDate("-1m")        = 2020-06-10
     * console.log("_DATES.parseDate(\"-1y\") = "        + _DATES.parseDate("-1y"));        // _DATES.parseDate("-1y")        = 2019-07-10
     * console.log("_DATES.parseDate(\"+1d,+1m\") = "    + _DATES.parseDate("+1d,+1m"));    // _DATES.parseDate("+1d,+1m")    = 2020-08-11
     * console.log("_DATES.parseDate(\"+1d +1m\") = "    + _DATES.parseDate("+1d +1m"));    // _DATES.parseDate("+1d +1m")    = 2020-08-11
     * console.log("_DATES.parseDate() = "               + _DATES.parseDate());             // _DATES.parseDate()             = undefined
     * console.log("_DATES.parseDate(\"abcd\") = "       + _DATES.parseDate("abcd"));       // _DATES.parseDate("abcd")       = abcd
     * console.log("_DATES.parseDate(\"2020-01-01\") = " + _DATES.parseDate("2020-01-01")); // _DATES.parseDate("2020-01-01") = 2020-01-01
     * @param {string} date parsing 할 날짜 관련 문자열, ex.) "today"/"yesterday"/"tomorrow", "+0d"/"-1D", "+0w"/"-1W", "+0m"/"-1M", "+0y"/"-1Y", "+1d,+1m"/"+1d +1m"
     * @returns {string} 변환된 날짜
     */
    parseDate: function (date) {
        var dateAliases = {"yesterday": "-1d", "today": "+0d", "tomorrow": "+1d"};
        var newDate = (date in dateAliases ? dateAliases[date] : date);
        var functionMapping = {"d": _DATES.addDays, "m": _DATES.addMonths, "w": _DATES.addWeeks, "y": _DATES.addYears};
        var parts;
        var index;
        var part;
        var duration;
        var boundAddFunction;

        if (/^[\-+]\d+[dmwy]([\s,]+[\-+]\d+[dmwy])*$/i.test(newDate)) {
            parts = newDate.match(/([\-+]\d+)([dmwy])/gi);
            newDate = _DATES.today();
            for (index = 0; index < parts.length; index++) {
                part = parts[index].match(/([\-+]\d+)([dmwy])/i);
                duration = Number(part[1]);
                boundAddFunction = functionMapping[part[2].toLowerCase()].bind(_DATES);
                newDate = boundAddFunction(duration, newDate);
            }
        }

        return newDate;
    }
};
})(window, window["jQuery"], window["moment"]);